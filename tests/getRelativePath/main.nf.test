nextflow_pipeline {

    name "Test getRelativePath"
    script "./main.nf"
    tag "getRelativePath"

    test("getRelativePath") {
        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
          // Use getAllFilesFromDir() to get a list of all files and folders from the output directory, minus the timestamped files
          def stable_name = getAllFilesFromDir(params.outdir, true, ['pipeline_info/execution_*.{html,txt}'], null )
          def stable_file = getAllFilesFromDir(params.outdir, false, ['pipeline_info/execution_*.{html,txt}'], null )
          assert snapshot(
            // Use getRelativePath to get the relative path starting from outputDir
            getRelativePath(stable_name, outputDir),
            getRelativePath(stable_file, outputDir)
          ).match()
        }
    }

    test("getAllFilesFromDir & getRelativePath combined") {
        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
          // Use getAllFilesFromDir() with named params to get a list of all files and folders from the output directory, minus the timestamped files
          def stable_name = getAllFilesFromDir(params.outdir, relative: true, ignore: ['pipeline_info/execution_*.{html,txt}'] )
          def stable_file = getAllFilesFromDir(params.outdir, relative: true, includeDir: false, ignore: ['pipeline_info/execution_*.{html,txt}'] )
          assert snapshot(
            stable_name,
            stable_file
          ).match()
        }
    }
}
